{
    "name": "cline/ruler",
    "description": "Fluent rule engine with proposition-based evaluation and 50+ operators for building conditional business logic",
    "license": "MIT",
    "keywords": [
        "php",
        "rule-engine",
        "business-rules",
        "dsl",
        "fluent-interface",
        "proposition",
        "conditional-logic",
        "operators",
        "evaluation",
        "context"
    ],
    "authors": [
        {
            "name": "Brian Faust",
            "email": "brian@cline.sh"
        }
    ],
    "require": {
        "php": "^8.4.0"
    },
    "require-dev": {
        "cline/php-cs-fixer": "^1.0",
        "ergebnis/composer-normalize": "^2.49@dev",
        "laravel/pint": "^1.25.1",
        "orchestra/testbench": "^10.6",
        "peckphp/peck": "^0.1.3",
        "pestphp/pest": "^3.8.4",
        "pestphp/pest-plugin-type-coverage": "^3.6.1",
        "phpstan/phpstan": "^2.1.30",
        "rector/rector": "^2.2.1",
        "symfony/var-dumper": "^7.3.4"
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "Cline\\Ruler\\": "src/"
        },
        "files": [
            "src/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "pestphp/pest-plugin": true
        }
    },
    "scripts": {
        "lint": "vendor/bin/php-cs-fixer fix",
        "refactor": "rector",
        "test": [
            "@test:lint",
            "@test:type-coverage",
            "@test:typos",
            "@test:unit",
            "@test:types",
            "@test:refactor"
        ],
        "test:lint": "vendor/bin/php-cs-fixer check",
        "test:refactor": "rector --dry-run",
        "test:type-coverage": "pest --type-coverage --exactly=100",
        "test:types": "phpstan",
        "test:typos": "peck",
        "test:unit": "pest --coverage --exactly=100"
    }
}
